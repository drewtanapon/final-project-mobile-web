import React, { useEffect, useState } from "react";
import { View, Text, FlatList, TouchableOpacity, Alert, ActivityIndicator, StyleSheet, Image } from "react-native";
import { auth, db, collection, doc, getDocs} from "./firebaseConfig"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ getDocs



const ShowClassScreen = ({ navigation }) => {
  const [classes, setClasses] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchClasses = async () => {
      try {
        const user = auth.currentUser;
        if (!user) {
          Alert.alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
          navigation.replace("Login");
          return;
        }

        // ‚úÖ ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà Collection `subjectList` ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ Student/{userId}
        const studentRef = doc(db, "Student", user.uid);
        const subjectListRef = collection(studentRef, "subjectList"); // ‚úÖ ‡πÉ‡∏ä‡πâ collection() ‡πÅ‡∏ó‡∏ô doc()
        const querySnapshot = await getDocs(subjectListRef); // ‚úÖ ‡πÉ‡∏ä‡πâ getDocs() ‡∏≠‡πà‡∏≤‡∏ô Collection

        if (!querySnapshot.empty) {
          const subjects = querySnapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
          }));
          setClasses(subjects);
        } else {
          setClasses([]); // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤
        }
      } catch (error) {
        Alert.alert("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", error.message);
      }
      setLoading(false);
    };

    fetchClasses();
  }, []);


  return (
    <View style={styles.container}>
      <Text style={styles.title}>üìö ‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</Text>

      {loading ? (
        <ActivityIndicator size="large" color="#007bff" />
      ) : classes.length > 0 ? (
        <FlatList
          data={classes}
          keyExtractor={(item) => item.id}
          renderItem={({ item }) => (
            <View style={styles.classItem}>
              <Image source={{ uri: item.photo }} style={styles.classImage} />
              <Text style={styles.classText}>üìñ {item.name} ({item.code})</Text>
              <Text style={styles.roomText}>üìç ‡∏´‡πâ‡∏≠‡∏á: {item.room || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</Text>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô */}
              <TouchableOpacity
                style={styles.attendanceButton}
                onPress={() => {
                  if (item.id) {
                    // ‡∏™‡πà‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤ `cid` ‡πÑ‡∏õ‡∏ó‡∏µ‡πà `JoinClass`
                    navigation.navigate("JoinClass", { cid: item.id });
                  } else {
                    Alert.alert("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤");
                  }
                }}
              >
                <Text style={styles.buttonText}>‚úîÔ∏è ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</Text>
              </TouchableOpacity>

            </View>
          )}
        />
      ) : (
        <Text style={styles.noClassText}>‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</Text>
      )}

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
      <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>
        <Text style={styles.buttonText}>üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</Text>
      </TouchableOpacity>
    </View>
  );
};

// ‚úÖ ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ ShowClass
const styles = StyleSheet.create({
  container: {
    flex: 0.95,
    justifyContent: "flex-start",  // ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
    alignItems: "center", // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
    backgroundColor: "#f4f4f4",
    paddingHorizontal: 20,
    paddingTop: 80, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
  },
  title: {
    fontSize: 28,
    fontWeight: "bold",
    color: "#333",
    marginBottom: 20,
  },
  classListContainer: {
    flexGrow: 1,  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
    justifyContent: 'flex-start',  // ‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
    alignItems: 'center', // ‡∏à‡∏±‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
    width: "100%", // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
    paddingBottom: 100,  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏ä‡∏ô
  },
  classItem: {
    backgroundColor: "#007bff",
    padding: 18,
    marginVertical: 15, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤
    borderRadius: 10,
    width: "90%", // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏Ñ‡∏ö‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
    alignItems: "center", // ‡∏à‡∏±‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏Å‡∏ô X
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 5 },
    shadowOpacity: 0.3,
    shadowRadius: 5,
    elevation: 5, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Android
  },
  classText: {
    color: "#fff",
    fontSize: 18,
    textAlign: "center",
  },
  attendanceButton: {
    backgroundColor: "#28a745",  // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠
    marginTop: 15,
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 8,
    alignItems: "center",
  },
  noClassText: {
    fontSize: 18,
    color: "gray",
    marginTop: 20,
    textAlign: "center",
  },
  backButton: {
    backgroundColor: "#d9534f",
    width: "80%",
    paddingVertical: 15,
    alignItems: "center",
    borderRadius: 12,
    position: 'absolute',
    bottom: 20,
    elevation: 5,
  },
  buttonText: {
    color: "#fff",
    fontSize: 18,
  },
});

export default ShowClassScreen;
